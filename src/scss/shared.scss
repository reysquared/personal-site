@import '_util';
@import '_themes';

/********** General Page Style **********/

* {
  // Make themes swap smoothly. Matches transition for tab activation so they stay in sync.
  transition: background 0.2s ease, color 0.2s ease;
}
// TODO|kevin make almost all dimensions in this document relative to ems instead of px!
html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
}

body {
  @include var-with-fallback(background, --main-bg-color, $bgcolor);
  @include var-with-fallback(color, --main-text-color, $textcolor);
  font-family: "DejaVu Serif", Georgia, serif;
  font-size: 16px;
}

// Easy but only partial remedy for pre-HTML5 browsers (if you happen to be
// surfing the net from a fossil.) Doesn't help old versions of IE at all.
// Heavily abridged to just the semantic elements I'm actually using.
aside,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

// Content wrapper for the whole page
#wrapper {
  min-height: 100%;
  position: relative;
  overflow-x: hidden;
}

.main-header {
  margin: 0 2em;
}

h1,
h2 {
  font-variant: small-caps;
}

.subhead {
  font-size: 1.125em;
  font-style: italic;

  &::before {
    content: "\00a0\00a0\00a0\00a0\2767\00a0";
    font-weight: bold;
  }
}

// Container for primary page content
#main-content {
  padding-bottom: 4.25em;  // Same height as footer minus tab-panel bottom margin

  p:first-of-type:not(.subhead)::first-letter,
  hr+p::first-letter {
      // Yeeaaah, this is kind of egregious. It DOES look cool, though.
      // TODO|kevin Honestly this is just foolishness and should really be applied
      // to a class instead of this nightmare selector, but... it IS also FUN.
      float: left;
      @include var-with-fallback(color, --initial-caps-color, $capscolor);
      font-size: 2em;
      font-weight: bold;
      line-height: 1em;
      margin-top: -0.25rem;
      padding-right: 0.25rem;
      @include var-with-fallback(text-shadow, --initial-caps-stroke, $defaultcapsstroke);
  }
}

/** Footer anchored to page bottom **/
#sticky-footer {
  width: 100%;
  height: 6.25em;
  padding: 0 2em;
  position: absolute;
  bottom: 0;
  left: 0;

  a {
    text-decoration: none;
  }
}

a {
  // TODO|kevin ....... is this really necessary
  cursor: pointer;
}

/** Custom horizontal rule **/
hr {
  border: 0;
  height: 1px;
  // This actually looks pretty good in both light and dark modes, not touchin' it
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(102, 153, 255, 0.75), rgba(0, 0, 0, 0));
}

/** EXTRA-custom horizontal rule (div) **/
// Shouts to css-tricks: https://css-tricks.com/examples/hrs/
// Mine is on a div to be somewhat less ambiguous WRT standard.
.customrule {
  margin-top: 1.25em;
  height: calc(1em - 1px);
  @include var-with-fallback(border, --main-content-border, 1px solid $bordercolor);
  border-width: 1px 0 0 0;
  border-radius: calc(1em - 1px);

  &::before {
    display: block;
    height: calc(1em - 1px);
    margin-top: -1em;
    // One more than the height
    content: "";
    @include var-with-fallback(border, --main-content-border, 1px solid $bordercolor);
    border-width: 0 0 1px 0;
    border-radius: calc(1em - 1px);
  }

  &::after {
    content: " ";
    height: 0.5em;
    width: 0.5em;
    position: relative;
    margin: 0 auto;
    display: block;
    @include var-with-fallback(border, --main-content-border, 1px solid $bordercolor);
    border-radius: 50%;
    @include var-with-fallback(background-color, --customrule-flair-color, $flaircolor);
    text-align: center;
    // -1/2 height, -1px for own border, -0.5px to center on parent's border-top
    top: calc(-0.25em - 1.5px);
  }
}

/** Run and Go Back button formatting **/
// TODO|kevin honestly this feels kinda ugly now. I can do better than this.
.button {
  font: bold .7em Arial;
  text-decoration: none;
  background-color: #ddd;
  color: #333;
  padding: 2px 6px 2px 6px;
  border: outset 2px #bbb;

  &:hover {
    background-color: #eee;
  }

  &:active {
    background-color: #999;
    border: inset 2px #bbb;
  }
}


/********** JavaScript-Python Interface **********/
// TODO|kevin some of this stuff MIGHT become irrelevant lol

/** Container div for script input **/
.script-interface {
  width: 500px;
  margin: 0 auto;
}

/** Input + output textbox formatting **/
.scriptbox {
  width: 40em;
  height: 5em;
  @include var-with-fallback(border, --text-input-border, 1px solid $inputborder);
  resize: none;

  &:focus {
    @include var-with-fallback(border, --text-input-border-focus, 2px solid $inputfocus);
  }
}

// TODO|kevin idk if I'll actually use any of these .ajax-status styles...
.ajax-status {
  text-align: center;
}

/** Status icons for AJAX submission buttons! **/
.ajax-status.success::before,
/*Add empty pseudo-element on left side as well,*/
.ajax-status.failure::before,
/*to keep the Run button centered.*/
.ajax-status.success::after,
.ajax-status.failure::after {
  position: relative;
  left: 10px;
  margin: 0;
  padding: 0px 8px;
  content: "";
  /*Necessary for the element to display*/
}

.ajax-status.success::after {
  background: transparent url('images/success.png') no-repeat;
}

.ajax-status.failure::after {
  background: transparent url('images/failure.gif') no-repeat;
}



/********** Tabbed Menu Buttons **********/

/** Container div for tab buttons **/
.tabs-menu {
  height: 3em;
  @include var-with-fallback(border-bottom, --main-content-border, 1px solid $bordercolor);
  text-align: center;
  position: relative;
}

.tabs-list {
  margin: 0 auto;
  padding: 0;
  list-style: none;
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  // TODO|kevin this looks pretty good but it could do better I feel like tbh...
  // setting flex on tab-title seems to only get me so far and the shrunk buttons
  // cause the "tabs shift when selected" issue to return in a big way lol
  display: flex;
  align-items: end;
  justify-content: center;
}

/** An individual item of the tab menu **/
.tab-title {
  display: inline-block;
  vertical-align: bottom;
  width: 6em; // Explicit width to stop tabs shifting from bolded text
  margin: 0 0.1em;

  > a {
    display: block;
    margin: 0 1px;
    padding: 0.325em 0.625em;
    @include var-with-fallback(background, --main-bg-color, $bgcolor);
    transition: background 0.2s ease, color 0.2s ease, padding 0.2s ease, border 0.2s ease;
    text-decoration: none;
    @include var-with-fallback(color, --main-text-color, $textcolor);
    @include var-with-fallback(border, --main-content-border, 1px solid $bordercolor);
    border-width: 1px 1px 0 1px;

    &:hover, &:focus {
      /*Hover highlighting for tab buttons*/
      @include var-with-fallback(background, --tab-hover-fill, $bordercolor);
      // Color tab text as background on hover
      @include var-with-fallback(color, --main-bg-color, $bgcolor);
      @include var-with-fallback(border, --tab-hover-border, 1px solid $tabglowcolor);
      border-width: 1px 1px 0 1px;
      @include var-with-fallback(box-shadow, --tab-hover-shadow, $defaulttabhover);
    }
  }

  &.active > a {
    &, &:hover, &:focus {
      position: relative;
      bottom: -1px;  // Shifts active tab down, obscuring tabs-menu border for tab effect
      padding: 0.625em;
      @include var-with-fallback(background, --main-bg-color, $bgcolor);
      @include var-with-fallback(color, --main-text-color, $textcolor);
      font-weight: bold;
      box-shadow: none;
    }
  }
}


/********** Tabbed Content Display **********/

/** Container for all the tab panels **/
#tabs-content {
  overflow: auto;
  /*Fix for horizontal scroll bar jump thanks to Ayke van Laetham: https://aykevl.nl/2014/09/fix-jumping-scrollbar*/
  margin-left: calc(100vw - 100% + 1.25em);
  margin-right: 1.25em;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

/** Basic tab panel formatting **/
.tab-panel {
  margin: 0 auto 1.5em;
  padding: 1.25em;
  max-width: 37.5em;
  @include var-with-fallback(border, --main-content-border, 1px solid $bordercolor);
  overflow: hidden;

  // TODO|kevin this should have a slight margin-bottom of its own (perhaps take
  // some off of #tabs-content too?) so it looks less crowded in noscript mode

  &.active {
    display: block;
  }  

  &.inactive {
    display: none;
  }
}

// TODO|kevin I feel like I should be able to clean this up more. Plus maybe
// make custom properties for the caps-color-based border styles and add fallback?
// TODO|kevin also it doesn't REALLY need to be shared, does it? This is index-specific.
#pixelface {
  float: right;  // TODO|kevin unset this for small enough screens and center the image with a classic margin: 0 auto;
  height: 160px;
  margin-left: 0.3em;
  margin: 1em 0.5em 0 0.5em;
  width: 160px;
  background-size: 160px 160px;
  background-image: url('../../images/pixelface-light-border@2x.png');
  border: 1px solid;
  border-color: $capscolor;

  [data-theme="dark"] & {
    background-image: url('../../images/pixelface-dark-border@2x.png');
    border-color: #46e;
  }

  @media (prefers-color-scheme: dark) {
    background-image: url('../../images/pixelface-dark-border@2x.png');
    border-color: #46e;

    [data-theme="light"] & {
      // TODO|kevin this hullaballoo is pretty ridiculous, I should see how it actually compiles out
      background-image: url('../../images/pixelface-light-border@2x.png');
      border-color: $capscolor;
    }
  }
}
