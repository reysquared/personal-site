@import '_util';
@import '_themetoggle';


$home-button-wrap-breakpoint: 30em;

/********** General Page Style **********/

* {
  // Make themes swap smoothly. Matches transition for tab activation so they stay in sync.
  transition: background 0.2s ease, border-color 0.2s ease, color 0.2s ease;
}

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  @include var-with-fallback(background, --main-bg-color, $bgcolor);
  @include var-with-fallback(color, --main-text-color, $textcolor);
  font-family: 'DejaVu Serif', Georgia, serif;
  font-size: 16px;
}

// Easy but only partial remedy for pre-HTML5 browsers (if you happen to be
// surfing the net from a fossil.) Doesn't help old versions of IE at all.
// Heavily abridged to just the semantic elements I'm actually using.
aside,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

h1,
h2 {
  font-variant: small-caps;
}

h2:first-child {
  margin-top: 0;
}

a:not(.button) {
  @include var-with-fallback(color, --link-color, $capscolor);

  &:visited {
    @include var-with-fallback(color, --link-visited-color, $linkvisitedcolor);
  }
}

code {
  font-size: 0.875em;
}

fieldset {
  @include var-with-fallback(border, --main-content-border, 1px solid $bordercolor);
  display: flex;
  flex-direction: column;
  margin: 0;

  // Since I universally prefer to have labels that contain their form elements,
  // I also end up using them for content grouping sometimes
  >label {
    margin: 0.5em 0;

    span {
      display: block;
      margin-bottom: 0.5em;
    }
  }
}

input {
  &.small-number {
    width: 3.5em;
  }

  &.medium-number {
    width: 5em;
  }

  &.long-number {
    width: 10em;
  }
}

ul {
  padding-left: 1.5em;

  @media (max-width: $home-button-wrap-breakpoint) {
    padding-left: 1em;
  }

  li.top-gap {
    margin-top: 1em;
  }
}

// Content wrapper for the whole page
#wrapper {
  min-height: 100%;
  overflow-x: hidden;
  position: relative;
}

.main-header {
  margin: 0 auto;
  max-width: 50em;
  padding: 0 2em;
  position: relative;
  text-align: left;
  
  @media (max-width: $home-button-wrap-breakpoint) {
    text-align: center;
  }
}

.subhead {
  font-size: 1.125em;
  font-style: italic;

  &::before {
    content: '\2767\00a0';
    font-weight: bold;
  }
}

// Container for primary page content
#main-content {
  margin-bottom: 2em;
  padding-bottom: 4.25em;  // Same height as footer minus section.content bottom margin

  // Yeah, this is kind of egregious. It DOES look cool though. Should really be
  // applied to a class instead of this nightmare selector, but it IS also FUN.
  p:first-of-type:not(.subhead)::first-letter,
  hr+p::first-letter {
    @include var-with-fallback(color, --initial-caps-color, $capscolor);
    float: left;
    font-size: 2em;
    font-weight: bold;
    line-height: 1em;
    margin-top: -0.35rem;  // Attempt to only indent the first line of the paragraph
    padding-right: 0.25rem;
    @include var-with-fallback(text-shadow, --initial-caps-stroke, $defaultcapsstroke);
  }

}

.inner-content {
  // Fix for horizontal scroll bar jump thanks to Ayke van Laetham:
  // https://aykevl.nl/2014/09/fix-jumping-scrollbar
  margin-left: calc(100vw - 100% + 1.25em);
  margin-right: 1.25em;
  margin-top: 1.25em;
  overflow: auto;
}

/** Container styles for main content section(s) **/
.content {
  @include var-with-fallback(border, --main-content-border, 1px solid $bordercolor);
  margin: 0 auto 1.5em;
  max-width: 37.5em;
  overflow: hidden;
  padding: 1.25em;
}

/** Footer anchored to page bottom **/
#sticky-footer {
  display: flex;
  height: 6.25em;
  justify-content: space-between;
  margin: 0 auto;
  max-width: 37.5em;
  padding: 0 2em;
  position: absolute;
    bottom: 0;
    left: 0;
    right: 0;

  a {
    text-decoration: none;

    img {
      height: 1.5em;
    }
  }
}

/** Custom horizontal rule **/
hr {
  // This actually looks pretty good in both light and dark modes, not touchin' it
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(102, 153, 255, 0.75), rgba(0, 0, 0, 0));
  border: 0;
  height: 1px;
}

/** EXTRA-custom horizontal rule (div) **/
// Shouts to css-tricks: https://css-tricks.com/examples/hrs/
// Mine is on a div to be somewhat less ambiguous WRT standard.
.customrule {
  @include var-with-fallback(border, --main-content-border, 1px solid $bordercolor);
  border-radius: calc(1em - 1px);
  border-width: 1px 0 0 0;
  height: calc(1em - 1px);
  margin-top: 1.25em;

  &::before {
    @include var-with-fallback(border, --main-content-border, 1px solid $bordercolor);
    border-radius: calc(1em - 1px);
    border-width: 0 0 1px 0;
    content: '';
    display: block;
    height: calc(1em - 1px);
    margin-top: -1em;  // One more than the height
  }

  &::after {
    @include var-with-fallback(background, --customrule-flair-color, $flaircolor);
    @include var-with-fallback(border, --main-content-border, 1px solid $bordercolor);
    border-radius: 50%;
    content: ' ';
    display: block;
    height: 0.5em;
    margin: 0 auto;
    position: relative;
      // -1/2 height, -1px for own border, -0.5px to center on parent's border-top
      top: calc(-0.25em - 1.5px);
    text-align: center;
    width: 0.5em;
  }
}

/** Run and Go Back button formatting **/
.button {
  @include var-with-fallback(background, --main-bg-color, $bgcolor);
  @include var-with-fallback(border, --main-content-border, 1px solid $bordercolor);
  @include var-with-fallback(color, --main-text-color, $textcolor);
  display: inline-block;
  font-family: inherit;
  font-size: 0.875em;
  font-weight: bold;
  padding: 0.5em 1.5em 0.5em 1.5em;
  text-decoration: none;

  &.go-back {
    margin: 0.5em 0;
  }

  &.home-button {
    position: absolute;
      right: 2em;
      top: 2em;
      
    @media (max-width: $home-button-wrap-breakpoint) {
      margin: 0 auto 1em;
      position: static;
    }
  }

  &.small {
    border-radius: 0.25em;
    font-weight: normal;
    padding: 0.2em 0.5em;
  }

  &:hover {
    @include var-with-fallback(background, --tab-hover-fill, $bordercolor);
    @include var-with-fallback(border, --tab-hover-border, 1px solid $tabglowcolor);
    @include var-with-fallback(color, --main-bg-color, $bgcolor);
    // TODO|kevin hmmm, how can var-with-fallback support this pattern more flexibly?
    box-shadow: 0 0 3px 0 $tabglowcolor;
    box-shadow: 0 0 3px 0 var(--tab-glow-color);
  }

  &:active {
    @include var-with-fallback(background, --customrule-flair-color, $flaircolor);
    @include var-with-fallback(border-color, --initial-caps-color, $capscolor);
    @include var-with-fallback(color, --main-text-color, $textcolor);
    // It's nice to animate colors in general, but :active response should be IMMEDIATE
    transition: 0s;
  }
}
